version: '3.9'
services:
  objects-api:
    image: maykinmedia/objects-api:2.0.0
    container_name: objects-api
    platform: linux/amd64
    ports:
      - "8010:8000"
    environment: &objects-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=${SECRET_KEY:-1(@f(-6s_u(5fd&1sg^uvu2s(c-9sapw)1era8q&)g)h@cwxxg}
      - DJANGO_SETTINGS_MODULE=objects.conf.docker
      - DB_HOST=database-objects-api
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      - database-objects-api

  objects-api-import:
    image: maykinmedia/objects-api:2.0.0
    container_name: objects-api-import
    platform: linux/amd64
    environment: *objects-env
    # in the current version of django it is not possible to create a new user with password without user interaction by using the createsuperuser command
    command: sh init/init.sh
    volumes:
      - ./imports/objects-api/fixtures:/app/src/objects/fixtures
      - ./imports/objects-api/init:/app/init
    depends_on:
      - objects-api

  database-objects-api:
    image: postgis/postgis:13-3.1
    container_name: database-objects-api
    platform: linux/amd64
    environment:
      - POSTGRES_USER=${DB_USER:-objects}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-objects}

  objecttypes-api:
    image: maykinmedia/objecttypes-api:1.1.1
    container_name: objecttypes-api
    platform: linux/amd64
    ports:
      - "8011:8000"
    environment: &objecttypes-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$$15d}
      - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
      - DB_HOST=database-objecttypes-api
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      - database-objecttypes-api

  objecttypes-api-import:
    image: maykinmedia/objecttypes-api:1.1.1
    container_name: objecttypes-api-import
    platform: linux/amd64
    environment: *objecttypes-env
    command: sh init/init.sh
    volumes:
      - ./imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
      - ./imports/objecttypes-api/init:/app/init
    depends_on:
      - objecttypes-api

  database-objecttypes-api:
    image: postgres:14.1
    container_name: database-objecttypes-api
    environment:
      - POSTGRES_USER=${DB_USER:-objecttypes}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-objecttypes}
