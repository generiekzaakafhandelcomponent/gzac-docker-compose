version: '3.9'
services:
  keycloak:
    image: quay.io/keycloak/keycloak:17.0.1-legacy
    container_name: keycloak
    ports:
      - 8081:8080
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/valtimo-realm.json
    volumes:
      - ./imports/keycloak:/opt/jboss/keycloak/imports
  gzac-database:
    container_name: gzac-database
    image: mysql/mysql-server:8.0.28-1.2.7-server
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: gzac
      MYSQL_USER: gzac
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: "%"
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--lower_case_table_names=1",
      "--collation-server=utf8mb4_unicode_ci",
      "--character-set-server=utf8mb4",
      "--explicit_defaults_for_timestamp",
      "--ssl=false",
      "--innodb_flush_method=O_DIRECT",
      "--sql_mode=NO_ENGINE_SUBSTITUTION"
    ]
    volumes:
      - gzac-database-data:/var/lib/mysql # persist data even if container shuts down
  openzaak:
    image: openzaak/open-zaak:1.5.0
    container_name: openzaak
    platform: linux/amd64
    environment:
      - DB_HOST=openzaak-postgis
      - SECRET_KEY=veryRestrictedSecretKey
      - DB_USER=openzaak
      - DB_PASSWORD=openzaak
      - DB_NAME=openzaak
      - CACHE_DEFAULT=openzaak-redis:6379/0
      - CACHE_AXES=openzaak-redis:6379/0
      - DEBUG=true
      - ALLOWED_HOSTS=localhost,host.docker.internal,172.17.0.1,openzaak
      - OPENZAAK_SUPERUSER_USERNAME=admin
      - OPENZAAK_SUPERUSER_EMAIL=admin@admin.org
      - DJANGO_SUPERUSER_PASSWORD=admin
      - SENDFILE_BACKEND=django_sendfile.backends.simple
    ports:
      - "8001:8000"

  openzaak-postgis:
    image: mdillon/postgis:11
    container_name: openzaak-postgis
    platform: linux/amd64
    environment:
      - POSTGRES_USER=openzaak
      - POSTGRES_PASSWORD=openzaak
      - POSTGRES_DB=openzaak
    ports:
      - "5433:5432"
    volumes:
      - ./imports/open-zaak:/docker-entrypoint-initdb.d

  openzaak-redis:
    image: redis:6.2.6
    container_name: openzaak-redis
  objects-api:
    image: maykinmedia/objects-api:2.0.0
    container_name: objects-api
    platform: linux/amd64
    ports:
      - "8010:8000"
    environment: &objects-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=${SECRET_KEY:-1(@f(-6s_u(5fd&1sg^uvu2s(c-9sapw)1era8q&)g)h@cwxxg}
      - DJANGO_SETTINGS_MODULE=objects.conf.docker
      - DB_HOST=database-objects-api
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      - database-objects-api

  objects-api-import:
    image: maykinmedia/objects-api:2.0.0
    container_name: objects-api-import
    platform: linux/amd64
    environment: *objects-env
    # in the current version of django it is not possible to create a new user with password without user interaction by using the createsuperuser command
    command: sh init/init.sh
    volumes:
      - ./imports/objects-api/fixtures:/app/src/objects/fixtures
      - ./imports/objects-api/init:/app/init
    depends_on:
      - objects-api

  database-objects-api:
    image: postgis/postgis:13-3.1
    container_name: database-objects-api
    platform: linux/amd64
    environment:
      - POSTGRES_USER=${DB_USER:-objects}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-objects}

  objecttypes-api:
    image: maykinmedia/objecttypes-api:1.1.1
    container_name: objecttypes-api
    platform: linux/amd64
    ports:
      - "8011:8000"
    environment: &objecttypes-env
      - CORS_ALLOW_ALL_ORIGINS=true
      - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$$15d}
      - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
      - DB_HOST=database-objecttypes-api
      - DEBUG=true
      - TWO_FACTOR_FORCE_OTP_ADMIN=False # this is not available yet in this version
      - TWO_FACTOR_PATCH_ADMIN=False
    depends_on:
      - database-objecttypes-api

  objecttypes-api-import:
    image: maykinmedia/objecttypes-api:1.1.1
    container_name: objecttypes-api-import
    platform: linux/amd64
    environment: *objecttypes-env
    command: sh init/init.sh
    volumes:
      - ./imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
      - ./imports/objecttypes-api/init:/app/init
    depends_on:
      - objecttypes-api

  database-objecttypes-api:
    image: postgres:14.1
    container_name: database-objecttypes-api
    environment:
      - POSTGRES_USER=${DB_USER:-objecttypes}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-objecttypes}

volumes:
  gzac-database-data:
